syntax = "proto3";
package sft.datamarket.v1;

option go_package = "github.com/CosmosContracts/juno/x/datamarket/types";

import "gogoproto/gogo.proto";
import "sft/datamarket/v1/genesis.proto";
import "sft/datamarket/v1/data.proto";
import "cosmos/base/v1beta1/coin.proto";

service Msg {
  rpc UploadData(MsgUploadData) returns (MsgUploadDataResponse);
  rpc BuyData(MsgBuyData) returns (MsgBuyDataResponse);
  rpc MintTo(MsgMintTo) returns (MsgMintToResponse);
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

message MsgUploadData {
  string uploader = 1 [ (gogoproto.moretags) = "yaml:\"uploader\"" ];
  string class = 2 [ (gogoproto.moretags) = "yaml:\"class\"" ];
  string url = 3 [ (gogoproto.moretags) = "yaml:\"url\"" ];
}

message MsgUploadDataResponse{}

message MsgBuyData {
  string buyer = 1 [ (gogoproto.moretags) = "yaml:\"buyer\"" ];
  string class = 2 [ (gogoproto.moretags) = "yaml:\"class\"" ];
}

message MsgBuyDataResponse {
  DataSet dataSet = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"data_set\""
  ];
}

message MsgMintTo {
  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.nullable) = false
  ];
  string mintToAddress = 3 [ (gogoproto.moretags) = "yaml:\"mint_to_address\"" ];
}

message MsgMintToResponse {}

message MsgUpdateParams {
  string Authority = 1 [ (gogoproto.moretags) = "yaml:\"authority\"" ];
  Params params = 2 [(gogoproto.nullable) = false];
}

message MsgUpdateParamsResponse{}